name: Paper Trading Trial

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      date:
        description: 'Date for simulation (YYYYMMDD)'
        required: false
        default: ''
      bankroll:
        description: 'Starting bankroll amount'
        required: false
        default: '1000'

jobs:
  paper-trading-simulation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
        
    - name: Determine simulation date
      id: get-date
      run: |
        if [ -n "${{ github.event.inputs.date }}" ]; then
          echo "date=${{ github.event.inputs.date }}" >> $GITHUB_OUTPUT
        else
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
        fi
        
    - name: Run tests
      run: |
        pytest tests/test_paper_trader.py -v --cov=scripts.paper_trader --cov-report=xml --cov-report=term
        
    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        
    - name: Prepare test data
      run: |
        mkdir -p data
        # Create sample bets file
        cat > data/bets.csv << EOF
        game_id,bet_type,selection,odds,stake
        nba_20240115_lal_lac,moneyline,Lakers,150,100
        nba_20240115_bos_bkn,moneyline,Celtics,-200,200
        nba_20240115_phx_sac,total,over,-110,110
        nba_20240115_gsw_hou,spread,Warriors,-110,110
        nfl_20240115_buf_kc,moneyline,Chiefs,-150,150
        EOF
        
        # Create sample results file
        cat > data/results.csv << EOF
        game_id,home_team,away_team,home_score,away_score,status
        nba_20240115_lal_lac,Lakers,Clippers,115,110,completed
        nba_20240115_bos_bkn,Celtics,Nets,98,102,completed
        nba_20240115_phx_sac,Suns,Kings,125,115,completed
        nba_20240115_gsw_hou,Warriors,Rockets,118,112,completed
        nfl_20240115_buf_kc,Chiefs,Bills,27,24,completed
        EOF
        
    - name: Run paper trading simulation
      run: |
        python scripts/paper_trader.py \
          --date ${{ steps.get-date.outputs.date }} \
          --results_source csv \
          --bankroll ${{ github.event.inputs.bankroll || '1000' }} \
          --bets_file data/bets.csv \
          --results_file data/results.csv \
          --output_dir output \
          --log_level INFO
          
    - name: Display simulation results
      run: |
        echo "=== Simulation Results ==="
        if [ -f output/daily_summary.json ]; then
          cat output/daily_summary.json | python -m json.tool
        fi
        echo "========================="
        
    - name: Upload simulation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: paper-trading-results-${{ steps.get-date.outputs.date }}
        path: |
          output/simulation_*.csv
          output/daily_summary.json
        retention-days: 30
        
    - name: Create performance report
      run: |
        python -c "
        import json
        import sys
        
        with open('output/daily_summary.json', 'r') as f:
            data = json.load(f)
        
        metrics = data['metrics']
        print('## Paper Trading Performance Report')
        print(f'**Date:** {data[\"date\"]}')
        print(f'**ROI:** {metrics[\"roi_percentage\"]}%')
        print(f'**Win Rate:** {metrics[\"win_rate_percentage\"]}%')
        print(f'**Net Profit:** \${metrics[\"net_profit\"]}')
        print(f'**Total Bets:** {metrics[\"total_bets\"]}')
        " > performance_report.md
        
    - name: Comment on PR (if in PR context)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('performance_report.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });
          
    - name: Store metrics in GitHub environment
      run: |
        echo "PAPER_TRADING_ROI=${{ steps.metrics.outputs.roi }}" >> $GITHUB_ENV
        echo "PAPER_TRADING_WIN_RATE=${{ steps.metrics.outputs.win_rate }}" >> $GITHUB_ENV
        
  notify-results:
    needs: paper-trading-simulation
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Send notification
      run: |
        echo "Paper trading simulation completed for date: ${{ needs.paper-trading-simulation.outputs.date }}"
        echo "Check artifacts for detailed results"
